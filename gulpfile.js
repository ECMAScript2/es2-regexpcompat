const gulp   = require('gulp'),
      closureCompiler = require('google-closure-compiler').gulp(),
      gulpDPZ = require('gulp-diamond-princess-zoning'),
      tempDir = require('os').tmpdir() + '/ReRE.js',
      fs      = require( 'fs' );
const dontEditMessage = '// THIS SCRIPT IS GENERATED BY "##". DO NOT EDIT!\n\n';

gulp.task( 'data',
    function( cb ){
        // Case folding
        var fileName = './tools.js/1_generateUnicodeFoldMap.js';

        fs.writeFileSync(
            './src.js/3_data.generated/1_unicodeFoldMap.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Case folding Legacy
        fileName = './tools.js/2_generateUnicodeFoldMapLegacy.js';

        fs.writeFileSync(
            './src.js/3_data.generated/2_unicodeFoldMapLegacy.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Unicode Category
        fileName = './tools.js/3_generateUnicodeCategory.js';

        fs.writeFileSync(
            './src.js/3_data.generated/3_unicodeCategory.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Unicode Property
        var fileName = './tools.js/4_generateUnicodeProperty.js';

        fs.writeFileSync(
            './src.js/3_data.generated/4_unicodeProperty.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Unicode Property Alias
        var fileName = './tools.js/5_generateUnicodePropertyAlias.js';

        fs.writeFileSync(
            './src.js/3_data.generated/5_unicodePropertyAlias.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Unicode Property Value Alias
        var fileName = './tools.js/6_generateUnicodePropertyValueAlias.js';

        fs.writeFileSync(
            './src.js/3_data.generated/6_unicodePropertyValueAlias.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // Unicode Script
        var fileName = './tools.js/7_generateUnicodeScript.js';

        fs.writeFileSync(
            './src.js/3_data.generated/7_unicodeScript.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // 
        var fileName = './tools.js/8_generateCharSetWordAndUnicodeWord.js';

        fs.writeFileSync(
            './src.js/4_char-class/3_ascii.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        //
        var fileName = './tools.js/9_generateCharSetIdStartAndIdContinue';

        fs.writeFileSync(
            './src.js/5_syntax/3_charSetIdStartAndIdContinue.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        // 
        var fileName = './tools.js/A_generateExterns.js';

        fs.writeFileSync(
            './src.externs/externs.generated.js',
            dontEditMessage.replace( '##', fileName ) + require( fileName )()
        );
        cb();
    }
);


gulp.task( '__compile', gulp.series(
    function(){
        return gulp.src(
            [
                './src.js/**/*.js',
                '!./src.js/0_global/2_polyfill.js'
            ]
        ).pipe(
            gulpDPZ(
                {
                    // labelGlobal        : 'global',
                    labelPackageGlobal : '*',
                    // labelModuleGlobal  : 'moduleGlobal',
                    packageGlobalArgs  : [ 'global,RegExp,String,Math,Infinity,undefined', 'this,this.RegExp,String,Math,1/0,void 0' ],
                    basePath           : './src.js/',
                    // wrapAll            : true
                }
            )
        ).pipe(
            closureCompiler(
                {
                    externs           : [ './src.externs/externs.generated.js' ],
                    define            : [
                        'DEFINE_REGEXP_COMPAT__DEBUG='  + ( strCompileType !== 'release' ),
                        'DEFINE_REGEXP_COMPAT__MINIFY=' + ( strCompileType !== 'develop' ),
                        'DEFINE_REGEXP_COMPAT__NODEJS=false',
                        'DEFINE_REGEXP_COMPAT__CLIENT_MIN_ES_VERSION=' + clientMinEsVersion,
                        'DEFINE_REGEXP_COMPAT__ES_FEATURE_VERSION='    + ecmaFeatureVersion,
                        'DEFINE_REGEXP_COMPAT__EXPORT_BY_RETURN=true'
                    ],
                    compilation_level : strCompileType === 'develop' ? 'SIMPLE' : 'ADVANCED',
                    // compilation_level : 'WHITESPACE_ONLY',
                    env               : 'CUSTOM',
                    formatting        : strCompileType !== 'release' ? 'PRETTY_PRINT' : 'SINGLE_QUOTES',
                    warning_level     : 'VERBOSE',
                    language_in       : 'ECMASCRIPT3',
                    language_out      : 'ECMASCRIPT3',
                    output_wrapper    :
                        '// ReRE.js for ES' + clientMinEsVersion + '[' + strCompileType + '], Compat feature:ES' + ecmaFeatureVersion + ', (https://githug.com/itozyun/rerejs)\n' +
                        (
                            strCompileType === 'develop' ?
                                'var RegExpCompat=(function(){%output%})();' :
                                'var RegExpCompat=%output%'
                        ),
                    js_output_file    : clientMinEsVersion !== 2 ?
                                            'ReRE.es' + clientMinEsVersion + '.' + ecmaFeatureVersion + '.' + strCompileType + '.js' :
                                            'ReRE.es2.js'
                }
            )
        ).pipe( gulp.dest( clientMinEsVersion !== 2 ? 'dist/' + strCompileType : tempDir ) );
    },
    function( cb ){
        if( clientMinEsVersion !== 2 ){
            return cb();
        };
        return gulp.src(
            [
                './src.js/0_global/2_polyfill.js',
                tempDir + '/ReRE.es2.js'
            ]
        ).pipe(
            closureCompiler(
                {
                    // externs           : [ './src.externs/externs.generated.js' ],
                    // compilation_level : 'ADVANCED',
                    compilation_level : 'WHITESPACE_ONLY',
                    // env               : 'CUSTOM',
                    formatting        : strCompileType !== 'release' ? 'PRETTY_PRINT' : 'SINGLE_QUOTES',
                    // warning_level     : 'QUIET',
                    language_in       : 'ECMASCRIPT3',
                    language_out      : 'ECMASCRIPT3',
                    output_wrapper    : '// ReRE.js for ES2[' + strCompileType + '], Compat feature:ES' + ecmaFeatureVersion + ', (https://githug.com/itozyun/rerejs)\n%output%',
                    js_output_file    : 'ReRE.es2.' + ecmaFeatureVersion + '.' + strCompileType + '.js'
                }
            )
        ).pipe( gulp.dest( 'dist/' + strCompileType ) );
    }
) );

var strCompileType     = 'release'; // .release .debug .develop
var ecmaFeatureVersion = 3;
var clientMinEsVersion = 2;

gulp.task( '__compile_all_compileTypes', gulp.series(
    function( cb ){
        strCompileType = 'develop';cb();
    },
    '__compile',
    function( cb ){
        strCompileType = 'debug';cb();
    },
    '__compile',
    function( cb ){
        strCompileType = 'release';cb();
    },
    '__compile'
) );

gulp.task( '__compile_all_furetre', gulp.series(
    function( cb ){
        ecmaFeatureVersion = 3;cb();
    },
    '__compile_all_compileTypes',
    function( cb ){
        ecmaFeatureVersion = 2015;cb();
    },
    '__compile_all_compileTypes',
    function( cb ){
        ecmaFeatureVersion = 2018;cb();
    },
    '__compile_all_compileTypes'
) );

gulp.task( '__compile_all_target', gulp.series(
    function( cb ){
        clientMinEsVersion = 2;cb();
    },
    '__compile_all_furetre',
    function( cb ){
        clientMinEsVersion = 3;cb();
    },
    '__compile_all_furetre',
    function( cb ){
        clientMinEsVersion = 2015;cb();
    },
    '__compile_all_furetre'
) );

gulp.task( 'dist', gulp.series(
    'data',
    '__compile_all_target'
) );
